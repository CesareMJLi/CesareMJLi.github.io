<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Hexo Writing Formulation]]></title>
      <url>/2017/12/28/Hexo-Writing-Formulation/</url>
      <content type="html"><![CDATA[<p>This is a writing test for HEXO under the theme of material</p>
<h1 id="Block-Quote"><a href="#Block-Quote" class="headerlink" title="Block Quote"></a>Block Quote</h1><ul>
<li>Block without source<pre><code>{% blockquote %}
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.
    {% endblockquote %}
</code></pre><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
</blockquote>
</li>
</ul>
<ul>
<li>Block with source<pre><code>{% blockquote David Levithan, Wide Awake %}
    Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.
    {% endblockquote %}
</code></pre><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>
</li>
</ul>
<h1 id="Quote-from-Twitter"><a href="#Quote-from-Twitter" class="headerlink" title="Quote from Twitter"></a>Quote from Twitter</h1><pre><code>    {% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}
    NEW: DevDocs now comes with syntax highlighting. http://devdocs.io
    {% endblockquote %}
</code></pre><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io" target="_blank" rel="noopener">http://devdocs.io</a></p>
<footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752" target="_blank" rel="noopener">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>
<h1 id="Quote-from-other-resource"><a href="#Quote-from-other-resource" class="headerlink" title="Quote from other resource"></a>Quote from other resource</h1><pre><code>    {% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}
    Every interaction is both precious and an opportunity to delight.
    {% endblockquote %}
</code></pre><blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="noopener">Welcome to Island Marketing</a></cite></footer></blockquote>
<h1 id="Quote-an-Image-from-default-path"><a href="#Quote-an-Image-from-default-path" class="headerlink" title="Quote an Image from default path"></a>Quote an Image from default path</h1><pre><code>{% asset_img example.png This is an example image %}
</code></pre><img src="/2017/12/28/Hexo-Writing-Formulation/example.png" title="This is an example image">
<h1 id="Paragraph"><a href="#Paragraph" class="headerlink" title="Paragraph"></a>Paragraph</h1><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&gt;
&gt; &gt; And Here is a nested quote block.
&gt;
&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&gt; 
&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&gt; id sem consectetuer libero luctus adipiscing.
</code></pre><blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</p>
<blockquote>
<p>And Here is a nested quote block.</p>
</blockquote>
<p>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<h1 id="Unorder-List-Item"><a href="#Unorder-List-Item" class="headerlink" title="Unorder List Item"></a>Unorder List Item</h1><pre><code>*   This is a list item with two paragraphs.

    This is the second paragraph in the list item. You&#39;re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.

*   Another item in the same list.

    &gt; This is a quote.
</code></pre><ul>
<li><p>This is a list item with two paragraphs.</p>
<p>This is the second paragraph in the list item. You’re<br>only required to indent the first line. Lorem ipsum dolor<br>sit amet, consectetuer adipiscing elit.</p>
</li>
<li><p>Another item in the same list.</p>
<blockquote>
<p>This is a quote.</p>
</blockquote>
</li>
</ul>
<h1 id="Strongthen-text"><a href="#Strongthen-text" class="headerlink" title="Strongthen text"></a>Strongthen text</h1><pre><code>*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
</code></pre><p><em>single asterisks</em></p>
<p><em>single underscores</em></p>
<p><strong>double asterisks</strong></p>
<p><strong>double underscores</strong></p>
<h1 id="Attach-a-link"><a href="#Attach-a-link" class="headerlink" title="Attach a link"></a>Attach a link</h1><pre><code>[Cesare&#39;s Homepage](https://cesaremjli.github.io/)
</code></pre><p><a href="https://cesaremjli.github.io/" target="_blank" rel="noopener">Cesare’s Homepage</a></p>
]]></content>
      
        
        <tags>
            
            <tag> Markdown Language </tag>
            
            <tag> HEXO </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Binary Trees]]></title>
      <url>/2017/12/19/Binary-Trees/</url>
      <content type="html"><![CDATA[<p>A short introduction of binary trees and its use in Python.</p>
<h1 id="Description-of-the-binary-tree-problems"><a href="#Description-of-the-binary-tree-problems" class="headerlink" title="Description of the binary tree problems"></a>Description of the binary tree problems</h1><p><strong>Preorder Traversals</strong></p>
<p>Count the node whenever it is the first time you reach it</p>
<p><strong>Inorder Traversals</strong></p>
<p>Count the node in the order just like spanning all the nodes in the horizontal plane</p>
<ul>
<li>an algorithm in the inorder search</li>
</ul>
<pre><code>class TreeNode(object):
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None

class Solution(object):
    def inorderTraversal(self, root):
        &quot;&quot;&quot;
        :type root: TreeNode
        :rtype: List[int]
        &quot;&quot;&quot;
        # curNode=root
        res=[1]
        curNode=root
        while curNode!=None:
            if curNode.left==None:
                res.append(curNode.val)
                print curNode.val
                curNode=curNode.right
            else:
                thisNode=curNode
                curNode=curNode.left
                nextNode=curNode
                while nextNode.right!=None:
                    nextNode=nextNode.right
                nextNode.right=thisNode
                thisNode.left=None
        return res[1:]
</code></pre><p><strong>Postorder Traversals</strong></p>
<p>Count the node whenever it is the last time  you leave it</p>
]]></content>
      
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Binary Trees </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python List]]></title>
      <url>/2017/12/09/Python-List/</url>
      <content type="html"><![CDATA[<p>This journal aims to describe a problem of PYTHON LIST. </p>
<p>The decription of the problem could be found <a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/description/" target="_blank" rel="noopener">here</a> from LEETCODE.</p>
<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.</p>
<p>For example,<br>Given 1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5, return 1-&gt;2-&gt;5.<br>Given 1-&gt;1-&gt;1-&gt;2-&gt;3, return 2-&gt;3.</p>
<h1 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h1><pre><code># Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteDuplicates(self, head):
        &quot;&quot;&quot;
        :type head: ListNode
        :rtype: ListNode
        &quot;&quot;&quot;
        dummyHead=ListNode(0)
        dummyHead.next=head
        curNode=dummyHead

        while curNode!=None:
            nextNode=curNode.next
            if nextNode!=None and nextNode.next!=None and nextNode.val==nextNode.next.val:
                while nextNode!=None and nextNode.next!=None and nextNode.val==nextNode.next.val:
                    nextNode=nextNode.next
                # lastNode.next=nextNode.next
                curNode.next=nextNode.next;
            else:
                curNode=curNode.next

        return dummyHead.next
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> List </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Unity Development Journal]]></title>
      <url>/2017/12/03/Unity-Development-Journal/</url>
      <content type="html"><![CDATA[<p>This journal aims to record the interesting methods and functions used in the <strong>Unity Game Development</strong>.</p>
<h1 id="Useful-External-Links"><a href="#Useful-External-Links" class="headerlink" title="Useful External Links"></a>Useful External Links</h1><p><a href="https://docs.unity3d.com/ScriptReference/index.html" target="_blank" rel="noopener">Unity Scripting API</a>: Unity official programmer API</p>
<p><a href="https://docs.unity3d.com/Manual/index.html" target="_blank" rel="noopener">Unity User Manual</a>: Unity official user manual</p>
<p><a href="https://cowlevel.net/feed" target="_blank" rel="noopener">Cow Level</a>: Game news and evaluations</p>
<p><a href="https://www.indienova.com/" target="_blank" rel="noopener">Indie Nova</a>: Game developments</p>
<h1 id="Unity-Development-Process"><a href="#Unity-Development-Process" class="headerlink" title="Unity Development Process"></a>Unity Development Process</h1><blockquote>
<p><em>Player</em></p>
<ul>
<li>Player Tranforms</li>
</ul>
</blockquote>
<pre class=" language-css"><code class="language-css">    <span class="token selector">void Start () 
    </span><span class="token punctuation">{</span>
        // Debug<span class="token number">.</span>Log <span class="token punctuation">(</span><span class="token string">"I AM "</span> + gameObject<span class="token number">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

        _transform = GetComponent&lt;Transform><span class="token punctuation">(</span><span class="token punctuation">)</span> as Transform<span class="token punctuation">;</span>
        _animator = GetComponent&lt;Animator><span class="token punctuation">(</span><span class="token punctuation">)</span> as Animator<span class="token punctuation">;</span>
        _rigidbody = GetComponent&lt;Rigidbody<span class="token number">2</span>D><span class="token punctuation">(</span><span class="token punctuation">)</span> as Rigidbody<span class="token number">2</span>D<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">void Update () 
    </span><span class="token punctuation">{</span>    
        <span class="token selector">m_horizontal = Math<span class="token class">.Sign</span>(Input<span class="token class">.GetAxis</span> ("Horizontal"));
        m_vertical = Math<span class="token class">.Sign</span>(Input<span class="token class">.GetAxis</span> ("Vertical"));    

        _transform<span class="token class">.position</span> = _transform<span class="token class">.position</span> +
            _transform<span class="token class">.right</span> * m_horizontal * m_speed * Time<span class="token class">.deltaTime</span> +
            _transform<span class="token class">.up</span> * m_vertical * m_speed * Time<span class="token class">.deltaTime</span>;

        if (Input<span class="token class">.GetKeyDown</span>(KeyCode<span class="token class">.J</span>))
        </span><span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">/* Whenever it detects some key on the keyboard, do Something */</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre>
<blockquote>
<p><em>Animation</em> </p>
</blockquote>
<pre><code>Firstly, add an animation controller in the object to be attached with an animation.
Then drag the animation controller on to the game object
</code></pre><ul>
<li>Transition Control<pre class=" language-css"><code class="language-css">_animator<span class="token number">.</span><span class="token function">SetInteger</span><span class="token punctuation">(</span><span class="token string">"ParameterName"</span>,n<span class="token punctuation">)</span><span class="token punctuation">;</span>
_animator<span class="token number">.</span><span class="token function">SetBoolean</span><span class="token punctuation">(</span><span class="token string">"ParameterName"</span>,true/false<span class="token punctuation">)</span><span class="token punctuation">;</span>
_animator<span class="token number">.</span><span class="token function">SetTrigger</span><span class="token punctuation">(</span><span class="token string">"ParameterName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
</li>
</ul>
<blockquote>
<p><em>Game Object</em></p>
<ul>
<li>Instantiate Prefabs</li>
</ul>
</blockquote>
<pre><code>We could create game objects according to the predefined game objects. 
First create an empty game object, and then attach this scripts into this
game object.
</code></pre><pre class=" language-css"><code class="language-css">    <span class="token selector">public class InstantiateObj : MonoBehaviour </span><span class="token punctuation">{</span>

    <span class="token selector">public Transform prefab;

    public float timeDif=0<span class="token class">.5f</span>;
    private float nextTime;

    void Start () </span><span class="token punctuation">{</span>
        nextTime=<span class="token number">0.0</span>f<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">void Update () </span><span class="token punctuation">{</span>
        <span class="token selector">if(Time<span class="token class">.time</span>>nextTime)</span><span class="token punctuation">{</span>
            <span class="token function">Instantiate</span><span class="token punctuation">(</span>prefab<span class="token punctuation">)</span><span class="token punctuation">;</span>
            nextTime=nextTime+timeDif<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<blockquote>
<p><em>Sound Manager</em></p>
</blockquote>
<pre><code>Create an empty game object, and then add the sound scripts into the inspector, 
and then add different sound source and sound clips into the object. Meanwhile
we always put the audio listener onto the main camera.
</code></pre><ul>
<li><p>Sound Manager Scripts</p>
<pre class=" language-css"><code class="language-css"><span class="token selector">public class SoundManager : MonoBehaviour </span><span class="token punctuation">{</span>

<span class="token selector">public static SoundManager Instance;

<span class="token attribute">[Header("Sound Source")]</span>
public AudioSource as;
public AudioClip ac;
public AudioClip ac2;

<span class="token attribute">[Header("Soundtrack")]</span>
public AudioSource as_bgm_future;
public AudioClip ac_bgm_future;

<span class="token attribute">[Header("Soundtrack")]</span>
public AudioSource as_bgm_past;
public AudioClip ac_bgm_past;

float timeStamp;

// Use this for initialization
void Awake () </span><span class="token punctuation">{</span>
    <span class="token selector">if (Instance == null)
    </span><span class="token punctuation">{</span>
        Instance = this<span class="token punctuation">;</span>
        <span class="token function">DontDestroyOnLoad</span><span class="token punctuation">(</span>gameObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">else
    </span><span class="token punctuation">{</span>
        <span class="token function">Destroy</span><span class="token punctuation">(</span>gameObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token selector">void Start()</span><span class="token punctuation">{</span>
    as_bgm_future<span class="token number">.</span>clip = ac_bgm_future<span class="token punctuation">;</span>
    as_bgm_past<span class="token number">.</span>clip = ac_bgm_past<span class="token punctuation">;</span>
    as_bgm_future<span class="token number">.</span><span class="token function">Play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">public void PlayeOneTime()</span><span class="token punctuation">{</span>
    as<span class="token number">.</span><span class="token function">PlayOneShot</span><span class="token punctuation">(</span>ac<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">public void SwitchBGMandPitch(bool flag)</span><span class="token punctuation">{</span>
    <span class="token selector">as_bgm_past<span class="token class">.pitch</span>=1<span class="token class">.0f</span>;
    as_bgm_future<span class="token class">.pitch</span>=1<span class="token class">.0f</span>;
    if (flag)</span><span class="token punctuation">{</span>
        as_bgm_past<span class="token number">.</span><span class="token function">Pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        as_bgm_future<span class="token number">.</span><span class="token function">Play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token selector">else</span><span class="token punctuation">{</span>
        as_bgm_future<span class="token number">.</span><span class="token function">Pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        as_bgm_past<span class="token number">.</span><span class="token function">Play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>    
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
</li>
<li>Whenever it is used in another scripts<pre class=" language-css"><code class="language-css">SoundManager<span class="token number">.</span>Instance<span class="token number">.</span><span class="token function">FutureTravelToPast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
</li>
</ul>
<blockquote>
<p><em>Camera</em></p>
<ul>
<li>Camera Following</li>
</ul>
</blockquote>
<pre class=" language-css"><code class="language-css"><span class="token selector">public class CameraFollow : MonoBehaviour </span><span class="token punctuation">{</span>
    <span class="token selector">public GameObject player;
    private Vector3 offset;

    void Start () </span><span class="token punctuation">{</span>
        // offset = transform<span class="token number">.</span>position - player<span class="token number">.</span>transform<span class="token number">.</span>position<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">void Update () </span><span class="token punctuation">{</span>
        Vector<span class="token number">3</span> playerPosition =player<span class="token number">.</span>transform<span class="token number">.</span>position<span class="token punctuation">;</span>
        // transform<span class="token number">.</span>position = player<span class="token number">.</span>transform<span class="token number">.</span>position + offset<span class="token punctuation">;</span>
        // if <span class="token punctuation">(</span>playerPosition<span class="token number">.</span>x&lt;-<span class="token number">2.3</span><span class="token punctuation">)</span>
        //     return<span class="token punctuation">;</span>
        transform<span class="token number">.</span>position = new Vector<span class="token number">3</span><span class="token punctuation">(</span>playerPosition<span class="token number">.</span>x,<span class="token number">0</span>,-<span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<h1 id="Some-Tricks"><a href="#Some-Tricks" class="headerlink" title="Some Tricks"></a>Some Tricks</h1><blockquote>
<ol>
<li>The image size of the animation must by unified. Or some effects terrible would happen. All the images must by saved in .png with a tranparent background</li>
<li>Generally speaking, it is always a good idea to put <em>Player</em>, <em>Camera</em>, <em>Sound Manager</em> in a empty game object to manage them.</li>
</ol>
</blockquote>
<h2 id="Cesare-Dec-3-2017"><a href="#Cesare-Dec-3-2017" class="headerlink" title="Cesare Dec 3 2017"></a>Cesare Dec 3 2017</h2>]]></content>
      
        
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Picapicacuuu]]></title>
      <url>/2017/11/30/Picapicacuuu/</url>
      <content type="html"><![CDATA[<p>This is a basic idea of a unity Game</p>
<p><em>A small doodle try to save his lover in a cell phone infected by a scary virsus. It transformed the GoogleMap, Photos, Facebook, instagram into enemies. Go throught all the APPs and reached the final destination, fight with the big bad virsus monster!</em></p>
]]></content>
      
        
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[A Simple Python Depth First Search]]></title>
      <url>/2017/11/30/A-Simple-Python-Depth-First-Search/</url>
      <content type="html"><![CDATA[<p>Depth First Search in some real problems.</p>
<h1 id="Description-of-8-queens-Problem"><a href="#Description-of-8-queens-Problem" class="headerlink" title="Description of 8-queens Problem"></a>Description of 8-queens Problem</h1><p>Here is the description of <a href="https://leetcode.com/problems/n-queens/description/" target="_blank" rel="noopener">8-QUEEN PROBLEM</a>.</p>
<p>The n-queens puzzle is the problem of placing n queens on an n×n chessboard such that no two queens attack each other.</p>
<p>Given an integer n, return all distinct solutions to the n-queens puzzle.</p>
<p>Each solution contains a distinct board configuration of the n-queens’ placement, where ‘Q’ and ‘.’ both indicate a queen and an empty space respectively</p>
<h1 id="Solution-in-python-DFS"><a href="#Solution-in-python-DFS" class="headerlink" title="Solution(in python - DFS)"></a>Solution(in python - DFS)</h1><pre><code>    class Solution(object):
        def solveNQueens(self, n):
            &quot;&quot;&quot;
            :type n: int
            :rtype: List[List[str]]
            &quot;&quot;&quot;
            def DFS(queens, xy_dif,xy_sum):
                l=len(queens)
                if l==n:
                    result.append(queens)
                    return None
                for p in range(n):
                    if p not in queens and l-p not in xy_dif and l+p not in xy_sum:
                        DFS(queens+[p],xy_dif+[l-p],xy_sum+[l+p])
            result=[]
            DFS([],[],[])
            print result
            return [[&#39;.&#39;*i+&#39;Q&#39;+&#39;.&#39;*(n-i-1) for i in sol]for sol in result]
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Depth First Search </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
